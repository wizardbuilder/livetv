<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<includes>
    <include name="View_501_Testo">
        <description>List View (id=501)</description>
		
		
<!--

<include>Animation.Common</include>
			<visible>Control.IsVisible(59)</visible>
			
			-->	
	<control type="group">
		<visible>Control.IsVisible(501)</visible>
		<include>JumpBarHorizontal</include>
		<include>ViewSlideForJumpBar</include>		
		<include>Animation.Common</include>		
       <control type="group">
			<left>70</left>
			
			<visible>Control.IsVisible(501)</visible>
			<control type="image">
				<visible>!Skin.HasSetting(thumbnails.white)</visible> 
				<width>194</width>
				<height>502</height>
				<top>212</top>
				<left>19</left>
				<texture background="true" colordiffuse="FanartFade" border="2">common/box4.png</texture>
			</control>
			
			<control type="image">
				
				<width>192</width>
				<height>500</height>
				<top>213</top>
				<left>20</left>
				<texture background="true" colordiffuse="InfoBackground" border="12">backg/Bild2Inlay.png</texture>
			</control>
		
			
            <visible>Control.IsVisible(501)</visible>
            <control type="group">

				<control type="wraplist" id="501">
				
                   <!-- <visible>String.Contains(Container.FolderPath,plugin://plugin.program.advanced.launcher/,left) | Container.Content(movies)</visible>-->
					<!--
					<visible>String.Contains(Container.FolderPath,plugin://plugin.program.advanced.launcher/,left) | Container.Content(musicvideos) | Container.Content(artists) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(sets)</visible>
					
					-->
                    <top>217</top>
					<height>480</height>
				    <!-- <right>SidePad</right>-->
					<width>1080</width>
					<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
					<onright>1602</onright>
					<onup>59</onup>
					<ondown>59</ondown>
					<focusposition>4</focusposition>
					<movement>3</movement>
					<pagecontrol>1602</pagecontrol>
					<preloaditems>2</preloaditems>
					
					<scrolltime tween="quadratic">300</scrolltime>
					<viewtype label="37518">wraplist</viewtype>
						<!--<scrolltime tween="quadratic">400</scrolltime>-->
					<itemlayout width="380" height="54">
						<include>50itemlayout_new</include>
					</itemlayout>
	
					<focusedlayout width="380" height="54">
						<control type="group">
							<visible>!Control.HasFocus(60)</visible>
							<include>50focuslayout_new</include>
						</control>
						<control type="group">
							<visible>Control.HasFocus(60)</visible>
							<include>50itemlayout_new</include>
						</control>
					</focusedlayout>
                </control>
				</control>
					<control type="group">
					<right>0</right>
					<control type="scrollbar" id="1602">			   
						<include content="scrollbar_vertical">
							<param name="scrollid" value="1602" />
						</include>
					</control>
					</control>	
				</control>	
				
				
                
            <control type="group">
		
			<visible>Control.IsVisible(501)</visible>

			<control type="group">
				<top>185</top>
				<left>250</left>
				
				<control type="group">
					 
					<control type="image">
						<left>15</left>
						<top>0</top>
						<width>1600</width>
						<height>30</height>
						<texture background="true">common/background_top.png</texture>
					</control>
					<control type="image">
						<left>15</left>
						<top>682</top>
						<width>1600</width>
						<height>30</height>
						<texture background="true" flipy="true">common/background_top.png</texture>
					</control>
					
					<control type="image">
						<left>13</left>
						<top>33</top>
						<width>30</width>
						<height>650</height>
						<texture background="true">common/background_side.png</texture>
					</control>
					<control type="image">
						<left>1589</left>
						<top>33</top>
						<width>30</width>
						<height>650</height>
						<texture background="true" flipx="true">common/background_side.png</texture>
					</control>
				</control>
				
				<control type="image">
					<left>42</left>
                    <top>28</top>
                    <right>80</right>
                    <bottom>212</bottom>                          
					<texture colordiffuse="Box2" background="true">common/box6.png</texture>   
					<visible>!Skin.HasSetting(thumbnails.white)</visible>                        
				</control>
				<control type="image">
					<width>1544</width>
					<height>653</height>
					<top>29</top>
					<left>43</left>
					<texture colordiffuse="InfoBackground" background="true" border="12">backg/Bild2Inlay.png</texture>
				</control>

                <control type="image">
                    <left>428</left>
                    <top>29</top>
                    <right>10</right>
                    <bottom>10</bottom>
                    <fadetime>200</fadetime>
                    <width>1160</width>
                    <height>653</height>
                    <aspectratio aligny="center" align="center">scale</aspectratio>
                    <texture background="true">$VAR[FanartImage]</texture>
					<visible>!String.IsEqual(ListItem.Label,..)</visible>
					<!-- diffuse="diffuse/pvrinfo.png" -->
                </control>
				
				
				
				
				<control type="group">
                <left>60</left>
                <right>20</right>
                <posy>25</posy>
                <height>650</height>
				<width>347</width>
				<!--<include>Animation.SwitchText</include>-->
                
                <control type="label">
                    <top>8</top>
                    <aligny>center</aligny>
                    <height>64</height>
                    <font>SmallBold</font>
                    <textcolor>Dark1</textcolor>
                    <selectedcolor>Dark1</selectedcolor>
                    <label>$INFO[ListItem.Label]</label>
                </control>
				
				
				
                <control type="label">
                    <top>50</top>
                    <height>64</height>
                    <aligny>center</aligny>
                    <font>Small333</font>
                    <textcolor>Dark1</textcolor>
                    <selectedcolor>Dark1</selectedcolor>
                    <label>$INFO[ListItem.Year]</label>
                </control>
				<control type="label">
                    <top>50</top>
                    <height>64</height>
					<left>65</left>
                    <aligny>center</aligny>
					<size>38</size>
                    <font>Small333</font>
					<size>38</size>
                    <textcolor>Dark1</textcolor>
                    <selectedcolor>Dark1</selectedcolor>
                    <label>$INFO[ListItem.Duration(mins),, min]</label>
					<visible>!ListItem.IsFolder</visible> 
                </control>
				
				
				
                <control type="textbox">
				
                    <top>136</top>
                    <bottom>17</bottom>
                    
                    <font>Small333</font>
					<height>360</height>
                    <textcolor>Dark1</textcolor>
                    <selectedcolor>Dark2</selectedcolor>
                    <label>$INFO[ListItem.Plot]</label>
					<align>justify</align>
					<autoscroll>false</autoscroll>
                </control>
				
				<control type="label">
					<posy>575</posy>
					<width>450</width>
					<font>Small333</font>
					<textcolor>Dark1</textcolor>
					<label>$INFO[ListItem.RatingAndVotes]</label>
					<selectedcolor>Dark1</selectedcolor>
					<visible>!Skin.HasSetting(furniture.numericrating)</visible>
                </control>
				<control type="label">
					<posy>575</posy>
					<width>450</width>
					<font>Small333</font>
					<textcolor>Dark1</textcolor>
					<label>$INFO[ListItem.Votes,, Stimmen]</label>
					<selectedcolor>Dark1</selectedcolor>
					<visible>Skin.HasSetting(furniture.numericrating)</visible>
                </control>
				
				<control type="group">
				
					<posy>505</posy>
					<left>230</left>
					<width>155</width>
					<height>155</height>
					<visible>Skin.HasSetting(furniture.overlayinfobalken)</visible>
					<control type="group">
						
						<visible>!String.IsEqual(ListItem.Label,..) + Container.Content(movies)</visible>
						<control type="image" description="Back">
							<width>155</width>
							<height>155</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture border="0">progress/back2.png</texture>
							
						</control>
						<control type="group">
							<include>Animation.SwitchText</include>
							<control type="image">
								<!--<include>Animation.SwitchText</include>-->
								<visible>ListItem.IsResumable</visible>
								<left>-2</left>
								<centertop>50%</centertop>
								<width>157</width>
								<height>158</height>
								<texture colordiffuse="$VAR[ColorHighlight]">$INFO[ListItem.PercentPlayed,progress/circle/p,.png]</texture>																			
								<aspectratio align="center">keep</aspectratio>
							</control>
							<control type="image">
								<!--<include>Animation.SwitchText</include>-->
								<visible>String.Contains(ListItem.Overlay,OverlayWatched.png) + !ListItem.IsResumable</visible>
								<left>-2</left>
								<centertop>50%</centertop>
								<width>157</width>
								<height>158</height>
								<texture colordiffuse="$VAR[ColorHighlight]">progress/circle/p100.png</texture>																			
								<aspectratio align="center">keep</aspectratio>
							</control>
						</control>
						<control type="image" description="Back">
							<left>30</left>
							<top>30</top>
							<width>95</width>
							<height>94</height>
							<align>center</align>
							<aligny>center</aligny>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture  colordiffuse="MenuSlide" border="0">backg/ring2.png</texture>
							
						</control>
						
						<control type="group">
							<include>Animation.SwitchText</include>
							<control type="label">				
								<width>155</width>
								<centertop>50%</centertop>
								<align>center</align>
								<label>$VAR[Percentagelabel]</label>
								<font>Small333</font>
								<textcolor>Dark2</textcolor>
							</control>	
						</control>
					</control>
					
					
					


					
					
					
					
					
				</control>
				
				
				
				<control type="group">
					<visible>!Skin.HasSetting(furniture.numericrating)</visible>
					<posy>460</posy>
					<posx>0</posx>
                    <width>1050</width>
					<visible>!ListItem.IsFolder</visible>
					<control type="image">
						<posx>0</posx>
						<width>40</width>
						<height>40</height>
						<centertop>50%</centertop>
						<texture colordiffuse="$VAR[ColorHighlight]">backg/$VAR[Flagstar1].png</texture>
					</control>
					<control type="image">
						<posx>50</posx>
						<width>40</width>
						<height>40</height>
						<centertop>50%</centertop>
						<texture colordiffuse="$VAR[ColorHighlight]">backg/$VAR[Flagstar2].png</texture>						
					</control>
					<control type="image">
						<posx>100</posx>
						<width>40</width>
						<height>40</height>
						<centertop>50%</centertop>
						<texture colordiffuse="$VAR[ColorHighlight]">backg/$VAR[Flagstar3].png</texture>				
					</control>
					<control type="image">
						<posx>150</posx>
						<width>40</width>
						<height>40</height>
						<centertop>50%</centertop>
						<texture colordiffuse="$VAR[ColorHighlight]">backg/$VAR[Flagstar4].png</texture>						
					</control>
					<control type="image">
						<posx>200</posx>
						<width>45</width>
						<height>43</height>
						<centertop>50%</centertop>
						<texture colordiffuse="$VAR[ColorHighlight]">backg/$VAR[Flagstar5].png</texture>								
					</control>
				</control>
				<control type="group">
					<posy>460</posy>
					<posx>0</posx>
					<width>1050</width>	
					<visible>Skin.HasSetting(furniture.numericrating)</visible>
					<control type="image">
						<posx>0</posx>
						<width>40</width>
						<height>40</height>
						<centertop>50%</centertop>
						<texture colordiffuse="$VAR[ColorHighlight]">backg/$VAR[Flagstar1].png</texture>
					</control>
					<control type="label">
						<left>45</left>
						<width min="48">auto</width>
						<centertop>50%</centertop>
						<height>64</height>
						<align>left</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Rating]</label>
						
						<font>Flag</font>
						<textcolor>Dark1</textcolor>							
					</control>
				</control> 
			</control>
		</control>
				
				
				
				
				
				<control type="group">
					<top>210</top>
					<right>80</right>
					<visible>!stringcompare(ListItem.Label,..) + !Skin.HasSetting(furniture.overlaysnew)</visible>
					<control type="label">
                        <align>center</align>
                        <aligny>center</aligny>
                        <width>50</width>
						<right>7</right>
						<top>6</top>
                        <height>50</height>
                        <textcolor>$VAR[WatchedBackingColor]</textcolor>
						<font>SymbolPosterBackground</font>
                        <label>$VAR[WatchedBacking]</label>
                        <visible>!String.IsEqual(ListItem.Label,..)</visible>
                    </control>
					<control type="label">
                        <align>center</align>
                        <aligny>center</aligny>
                        <width>50</width>
						<right>7</right>
						<top>6</top>
                        <height>50</height>
                        <textcolor>$VAR[WatchedLabelPosterColor]</textcolor>
						<font>SymbolPoster</font>
                        <label>$VAR[WatchedLabelPoster]</label>
                        <visible>!String.IsEqual(ListItem.Label,..)</visible>
                    </control>
				</control>
				
				<control type="group">
					<top>230</top>
					<right>97</right>
					<visible>!String.IsEqual(ListItem.Label,..)</visible>
					<visible>Skin.HasSetting(furniture.overlaysnew) + !String.IsEqual(ListItem.Label,..)</visible>	
					<control type="group">
						<visible>Skin.HasSetting(furniture.overlaysnew) + !String.IsEqual(ListItem.Label,..)</visible>
						<control type="image">
							<centerright>32</centerright>
                        	<centertop>32</centertop>							
							<width>100</width>
							<height>100</height>							
							<texture colordiffuse="$VAR[ColorWatched]">$VAR[PercentWatchedNeu]</texture>						
						</control>					
						<control type="label">				
							<centerright>16</centerright>
							<centertop>16</centertop>
							<align>center</align>
							<label>$VAR[PercentWatchedNeuLabel]</label>
							<width>100</width>							
							<font>WatchedStates</font>
							<textcolor>FFFFFFFF</textcolor>
							<animation effect="rotate" center="auto" time="0" end="-45" condition="true" loop="false">Conditional</animation>
						</control>								
					</control>
				</control>
				
				
				
				
				
				
				
				
				<control type="group">
				<visible>!ListItem.IsFolder</visible>
				<visible>false</visible>
				<left>1740</left>
                <top>210</top>
		
					<control type="image">
						          
						<width>100</width>
						<height>100</height>
						
						<texture colordiffuse="$VAR[ColorHighlight]">backg/OverlayWatched.png</texture>
						<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | [String.Contains(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [String.IsEqual(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [String.IsEqual(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [String.IsEqual(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
					</control>	
					
					
					<control type="image">
						<!--<animation effect="fade" start="0" end="100" time="50">VisibleChange</animation> -->           
						<width>100</width>
						<height>100</height>
						
						<texture colordiffuse="FF333333">backg/OverlayWatched.png</texture>
						<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>	
						
							
							
					<control type="image">
						<!--<include>Animation.SwitchIcons</include>-->
						<right>70</right>
						<top>15</top>
						<width>43</width>
						<height>43</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[PosterPercentWatchedTest]</texture>
						<visible>!String.IsEqual(ListItem.Label,..)</visible>			
					</control>
				
				<!--
				<control type="image">
							<visible>Integer.IsGreater(ListItem.PercentPlayed,0)</visible>
                            <top>6</top>
                            <right>40</right>
                            <width>68</width>
                            <height>68</height>
                            <texture colordiffuse="$VAR[ColorHighlight]" background="true">backg/over2.png</texture>
                        </control>
						
						<control type="image">
							<visible>Integer.IsGreater(ListItem.PercentPlayed,0)</visible>
                            <top>10</top>
                            <right>42</right>
                            <width>80</width>
                            <height>80</height>
                            <texture background="true">backg/over1.png</texture>
                        </control>
				-->
				
				
				
				<!--
				<control type="image">
                        
                        <width>100</width>
                        <height>100</height>
						<fadetime>400</fadetime>
                        <texture colordiffuse="$VAR[ColorHighlight]">backg/OverlayWatched.png</texture>
                        <visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png) | Integer.IsGreater(ListItem.PercentPlayed,0)</visible>
              	</control>
				<control type="image">
                        
                        <right>82</right>
						<top>21</top>
                        <width>30</width>
                        <height>30</height>
						<fadetime>400</fadetime>
                        <texture colordiffuse="FFFFFFFF">backg/fertig.png</texture>
                        <visible>!String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)</visible>
              	</control>
							
				<control type="image">
						<visible>Integer.IsGreater(ListItem.PercentPlayed,0)</visible>
						<right>78</right>
						<top>19</top>
                        <width>35</width>
                        <height>35</height>
						<fadetime>400</fadetime>
                        <texture colordiffuse="FFFFFFFF">backg/angefangen.png</texture>
				</control>-->

<!--
				<control type="group">
				<animation effect="fade" start="0" end="100" time="300">VisibleChange</animation>
					
					<visible>Integer.IsGreater(ListItem.PercentPlayed,0)</visible>
					<control type="image">
                        
                        <width>100</width>
                        <height>100</height>
						<fadetime>400</fadetime>
                        <texture colordiffuse="$VAR[ColorHighlight]">backg/OverlayWatched.png</texture>
                        <visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png) | Integer.IsGreater(ListItem.PercentPlayed,0)</visible>
              		</control>
					<control type="image">
					
					
						<visible>Integer.IsGreater(ListItem.PercentPlayed,0)</visible>
						<right>78</right>
						<top>19</top>
                        <width>35</width>
                        <height>35</height>
						<fadetime>400</fadetime>
                        <texture colordiffuse="FFFFFFFF">backg/angefangen.png</texture>
				</control>
				</control>
				
				
				<control type="group">
				<animation effect="fade" start="0" end="100" time="300">VisibleChange</animation>
					
					<visible>!Integer.IsGreater(ListItem.PercentPlayed,0)</visible>
					<control type="image">
                        
                        <width>100</width>
                        <height>100</height>
						<fadetime>400</fadetime>
                        <texture colordiffuse="$VAR[ColorHighlight]">backg/OverlayWatched.png</texture>
                        <visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png) | Integer.IsGreater(ListItem.PercentPlayed,0)</visible>
              		</control>
					<control type="image">
                        
                        <right>82</right>
						<top>21</top>
                        <width>30</width>
                        <height>30</height>
						<fadetime>400</fadetime>
                        <texture colordiffuse="FFFFFFFF">backg/fertig.png</texture>
                        <visible>!String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)</visible>
              	</control>
				</control>
				-->
				
				
				<!--
				<control type="image">
                        
                        <width>100</width>
                        <height>100</height>
						<fadetime>400</fadetime>
                        <texture colordiffuse="$VAR[ColorHighlight]">backg/OverlayWatched.png</texture>
                        <visible>!String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
              	</control>
				<control type="image">
                        
                        <width>100</width>
                        <height>100</height>
						<fadetime>400</fadetime>
                        <texture colordiffuse="FFFFFFFF">backg/unwatched_2.png</texture>
                        <visible>!String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
              	</control>
				
				
				<control type="image">
                        
                        <width>100</width>
                        <height>100</height>
						<fadetime>400</fadetime>
                        <texture colordiffuse="$VAR[ColorHighlight]">backg/OverlayWatched.png</texture>
                        <visible>!String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)</visible>
              	</control>
				<control type="image">
                        
                        <width>100</width>
                        <height>100</height>
						<fadetime>400</fadetime>
                        <texture colordiffuse="FFFFFFFF">backg/watched_2.png</texture>
                        <visible>!String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)</visible>
              	</control>-->
								
				</control>
				
				
				
				
				
				
				<control type="group">
				<left>309</left>
				<top>207</top>
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				<control type="image">	
					<visible>!ListItem.IsFolder + !String.IsEmpty(ListItem.Art(discart)) + Skin.HasSetting(discartfanart)</visible>                
                    <posx>1157</posx>
                    <posy>438</posy>
                    <width>235</width>
                    <height>235</height>
                    <fadetime>1000</fadetime>				
                    <texture>$INFO[ListItem.Art(discart)]</texture>
					<animation type="Conditional" condition="!Container(501).OnNext + !Container(501).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="50" delay="1000" />                
					</animation> 
                    <animation type="Conditional" condition="!Container(501).OnNext + !Container(501).OnPrevious">                  
				   		<effect type="slide" start="110" end="-15" time="1000" delay="2000" tween="cubic" />                
					</animation> 
					<animation type="Visible" reversible="false">                  
				   		<effect type="fade" start="0" end="100" time="1500" tween="cubic" />                
					</animation>
					<animation type="Hidden" reversible="false">                  
				   		<effect type="fade" start="100" end="0" time="500" tween="cubic" />                
					</animation>
					<!--<animation effect="rotate" end="-360" center="auto" time="4800" loop="true" reversible="false" condition="!Player.Paused">Conditional</animation>-->
                    
                </control>
				
				
				<control type="image">	
					<visible>!ListItem.IsFolder</visible>                 
                    <posx>1263</posx>
                    <posy>340</posy>
                    <width>242</width>
                    <height>342</height>
                    <fadetime>200</fadetime>
                    <texture background="true">$VAR[PosterImage]</texture>
					<!--<visible>!Skin.HasSetting(furniture.animatedposters59)</visible>-->
                </control>
				<!--<control type="image">	
					<visible>!ListItem.IsFolder</visible>                 
                    <posx>1263</posx>
                    <posy>340</posy>
                    <width>242</width>
                    <height>342</height>
                    <fadetime>200</fadetime>
					<texture>$INFO[ListItem.Art(poster)]</texture>
                </control>-->
				
				<control type="image">
					<posx>1244</posx>
                    <posy>330</posy>
					<width>278</width>
					<height>370</height>
					<fadetime>400</fadetime>
					<texture diffuse="thumbs/thumb_mask.png">backg/poster_glass2.png</texture>
					<visible>!ListItem.IsFolder + Skin.HasSetting(ModernCase)</visible>
					<!--<visible>!Container(550).OnNext + !Container(550).OnPrevious</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" start="360,0" delay="100" end="0,0" time="900" tween="sine" easing="out" reversible="false"/>
						<effect type="fade" end="100" time="300" />
					</animation>-->
				</control>
				
				<control type="image">
					<posx>1261</posx>
                    <posy>338</posy>
					<width>244</width>
					<height>345</height>
					<fadetime>400</fadetime>
					<texture diffuse="thumbs/thumb_mask.png">backg/br-case.png</texture>
					<visible>!ListItem.IsFolder + !Skin.HasSetting(ModernCase)</visible>
					<!--<visible>!Container(550).OnNext + !Container(550).OnPrevious</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" start="360,0" delay="100" end="0,0" time="900" tween="sine" easing="out" reversible="false"/>
						<effect type="fade" end="100" time="300" />
					</animation>-->
				</control>
				
				</control>
				</control>
		</control>		
    </include>
    
    

</includes>
